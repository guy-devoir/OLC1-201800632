package analizadores;

import java_cup.runtime.Symbol;

%%
%class Lexico
%public
%line
%char
%cup
%unicode
%ignorecase
%init{
    yyline = 1;
    yychar = 1;
%init}

LineTerminator = \r|\n|\r\n
InputCharacter = [^\r\n]+
WhiteSpace = {LineTerminator} | [ \r ,\t\f]+
D = [0-9]+
DD = [0-9]+("."[ |0-9]+)?
L = ([a-zA-Z]||0-9])+
LineJump = \n
Backslash = \

%%

{WhiteSpace}   { /* ignore */ }

{D} { return new Symbol(sym.NUMERO,yyline,yychar,yytext()); }
{LineJump} { yychar=1; }
{DD} { return new Symbol(sym.DECIMAL,yyline,yychar,yytext()); }
{L} { return new Symbol(sym.STRING,yyline,yychar,yytext()); }

"CONJ" { return new Symbol(sym.CONJUNTO,yyline,yychar,yytext());}
":" { return new Symbol(sym.DOSPUNTOS,yyline,yychar,yytext()); }
";"  { return new Symbol(sym.PUNTOYCOMA,yyline,yychar,yytext());}
"->" { return new Symbol(sym.ASIGNAR,yyline,yychar,yytext()); }
"~" { return new Symbol(sym.RANGE,yyline,yychar,yytext()); }
"," { return new Symbol(sym.COMA,yyline,yychar,yytext()); }
"\"" { return new Symbol(sym.COMILLA,yyline,yychar,yytext()); }
"\'" { return new Symbol(sym.COMILLASIMPLE,yyline,yychar,yytext()); }

"." { return new Symbol(sym.CONCATENACION,yyline,yychar,yytext()); }
"|" { return new Symbol(sym.DISYUNCION,yyline,yychar,yytext()); }
"*" { return new Symbol(sym.ASTERISK,yyline,yychar,yytext()); }
"+" { return new Symbol(sym.MASMAS,yyline,yychar,yytext()); }
"?" { return new Symbol(sym.QUESTIONMARK,yyline,yychar,yytext()); }
"{" { return new Symbol(sym.CORCHETEABRE,yyline,yychar,yytext()); }
"}" { return new Symbol(sym.CORCHETECIERRA,yyline,yychar,yytext()); }

"!" { return new Symbol(sym.ASCII,yyline,yychar,yytext()); }
"#" { return new Symbol(sym.ASCII,yyline,yychar,yytext()); }
"$" { return new Symbol(sym.ASCII,yyline,yychar,yytext()); }
"%" { return new Symbol(sym.PERCENT,yyline,yychar,yytext()); }
"&" { return new Symbol(sym.ASCII,yyline,yychar,yytext()); }
"(" { return new Symbol(sym.ASCII,yyline,yychar,yytext()); }
")" { return new Symbol(sym.ASCII,yyline,yychar,yytext()); }

"-" { return new Symbol(sym.ASCII,yyline,yychar,yytext()); }
"/" { return new Symbol(sym.ASCII,yyline,yychar,yytext()); }
"<" { return new Symbol(sym.ASCII,yyline,yychar,yytext()); }
"=" { return new Symbol(sym.ASCII,yyline,yychar,yytext()); }
">" { return new Symbol(sym.ASCII,yyline,yychar,yytext()); }
"@" { return new Symbol(sym.ASCII,yyline,yychar,yytext()); }

"[" { return new Symbol(sym.ASCII,yyline,yychar,yytext()); }
{Backslash} { return new Symbol(sym.ASCII,yyline,yychar,yytext()); }
"]" { return new Symbol(sym.ASCII,yyline,yychar,yytext()); }
"^" { return new Symbol(sym.ASCII,yyline,yychar,yytext()); }
"_" { return new Symbol(sym.ASCII,yyline,yychar,yytext()); }
"`" { return new Symbol(sym.ASCII,yyline,yychar,yytext()); }

"\\n" { return new Symbol(sym.LINEJUMP,yyline,yychar,yytext()); }
"\\'" { return new Symbol(sym.SPCS,yyline,yychar,yytext()); }
"\\"" { return new Symbol(sym.SPCOMILLA,yyline,yychar,yytext()); }

. { 
    System.out.println(yytext() + "Error Lexico en linea: " + yyline + " y columna: " + yychar);
}